# 创建数据库，编码格式设置为utf8
# -- CHARACTER SET : 指定数据库采用的字符集，utf8不能写成utf-8
# -- COLLATE: 指定数据库字符集的排序规则，utf的默认培训规则为utf8_GENERAL_CI (通过show character set查看)
dropdatabase if exists dbtest
CREATE DATABASE dbtest CHARACTER SET utf8 COLLATE utf8_general_ci;

# -- 修改数据库编码
alter database dbtest character set GBK collate gbk_chinese_ci
alter database dbtest character set utf8 collate utf8_general_ci

# 创建表时，设置表、字段编码
use dbtest
drop table if exists tbtest;
create table tbtest(
id int(10) auto_increment,
user_name varchar(60) character set GBK collate gbk_chinese_ci,
email varchar(60),
primary key(id)
)character set utf8 collate utf8_general_ci

# --  修改表编码
alter table tbtest character set utf8 collate utf8_general_ci;
# -- 修改字段编码
alter table tbtest modify email varchar(60) character set utf8 collate utf8_general_ci


# 在数据库后 + 数据表的相应段 最后加上
# CHARACTER SET utf8 COLLATE utf8_general_ci

# -- 查看所有的字段符编码
show character set;
# -- 查看创建数据库的指令并查看数据库使用的编码
show creater database dbtest;

# 查看数据库编码
show variables like '%char%'

# 查看某字段使用的编码
select charset(email) from tbtest;

# --设置character_set_server、set charcter_set_client和set character_set_results
set character_set_server = utf8;  # --服务器的默认字符集。使用这个语句可以修改成功，但重启服务后会失效。根本的办法是修改mysql文件my.ini

# 创建表
USE xx;
CREATE TABLE a1(qid VARCHAR(10),qname VARCHAR(10) CHARACTER SET utf8 COLLATE utf8_general_ci,qall VARCHAR(500) CHARACTER SET utf8 COLLATE utf8_general_ci,inge VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci,outge VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci,rate INT(1));

CREATE TABLE a2(qid VARCHAR(10) ,total INT(5) DEFAULT 0,corret INT(5) DEFAULT 0);

CREATE TABLE a3(qid VARCHAR(10),stdin VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci,stdout VARCHAR(100) CHARACTER SET utf8 COLLATE utf8_general_ci,nn INT(5));